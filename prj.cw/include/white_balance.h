//
// Created by Константин Гончаров on 20.03.2025.
//

/**
 * @file white_balance.h
 * @brief Функции для коррекции баланса белого.
 *
 * Данный модуль содержит функции для преобразования изображения из sRGB
 * в линейное RGB, вычисления среднего цвета, матрицы ковариации,
 * а также для корректировки баланса белого с использованием
 * аддитивно-мультипликативной модели.
 */

#ifndef WHITE_BALANCE_H
#define WHITE_BALANCE_H

#include <opencv2/opencv.hpp>

/**
 * @brief Преобразует значение из sRGB в линейное RGB.
 * @param c Значение канала (в диапазоне [0,1]).
 * @return Значение в линейном RGB.
 */
float sRGBToLin(float c);

/**
 * @brief Преобразует значение из линейного RGB обратно в sRGB.
 * @param c Значение канала (в диапазоне [0,1]).
 * @return Значение в sRGB.
 */
float linToSRGB(float c);

/**
 * @brief Преобразует изображение из sRGB в линейное RGB.
 * @param img Исходное изображение в формате CV_32FC3 с нормированными значениями [0,1].
 * @return Изображение в линейном RGB.
 */
cv::Mat convertToLinRGB(const cv::Mat &img);

/**
 * @brief Корректирует баланс белого изображения в линейном RGB.
 *
 * Алгоритм:
 * 1. Вычисление среднего цвета и матрицы ковариации.
 * 2. Применение PCA для получения главной оси распределения.
 * 3. Определение "серой точки" — пересечение линии (mean + t*axis) с плоскостью,
 *    где сумма каналов равна 1.5 (идеальный центр цветового куба).
 * 4. Вычисление коэффициентов масштабирования для каждого канала.
 * 5. Применение аффинного преобразования: T(x) = D*(x - pGray) + p0.
 *
 * @param linImg Изображение в линейном RGB.
 * @return Скорректированное изображение в линейном RGB.
 */
cv::Mat whiteBalanceCorrection(const cv::Mat &linImg);

/**
 * @brief Преобразует изображение из линейного RGB обратно в sRGB.
 * @param linImg Изображение в линейном RGB.
 * @return Изображение в sRGB.
 */
cv::Mat convertToSRGB(const cv::Mat &linImg);

#endif // WHITE_BALANCE_H

